const int motionSensor = 2;             
const int tiltSensor = 3;
const int ambientLightSensor = 4;       

int ledRed = 9;
int built_in_led = 13;                           
int ledBlue = 8;                       
const int ledGreen = PB4;               

uint8_t motionState, tiltState, lightState = 0;
uint8_t premotion, prelight, pretilt = 0;

const uint16_t timer = 0;               
const uint16_t compare = 31250;          

void setup(){  
  Serial.begin(9600);                  
  
  pinMode(ledRed, OUTPUT);
  pinMode(built_in_led, OUTPUT);
  pinMode(ledBlue, OUTPUT);
  pinMode(tiltSensor, INPUT_PULLUP);    
  pinMode(motionSensor, INPUT);         
  pinMode(ambientLightSensor, INPUT_PULLUP); 
  DDRB |= (1 << ledGreen);              
  
  // Enable Pin Change Interrupts for Port D (Pins 2, 3, 4)
  PCICR |= (1 << PCIE2);                
  PCMSK2 |= 0b00011100;                 
  
  // Timer1 Configuration
  TCCR1A = 0;
  TCCR1B |= (1 << CS12);                
  TCCR1B &= ~(1 << CS11);
  TCCR1B &= ~(1 << CS10);
  
  TCNT1 = timer;                        // Initialize Timer counter
  OCR1A = compare;                      // Set compare value for 1 sec
  
  TIMSK1 = (1 << OCIE1A);               // Enable Timer Compare Interrupt
  sei();                                // Enable global interrupts
}

void loop(){
  // Motion Sensor Interrupt Handling
  if (premotion != motionState) {
    digitalWrite(built_in_led, motionState);       
    Serial.println("Motion Sensor Interrupt - Built in LED glow");
    premotion = motionState;
  }
  
  // Ambient Light Sensor Interrupt Handling
  if (prelight != lightState) {
    digitalWrite(ledBlue, !lightState);   
    Serial.println("Ambient Light Sensor Interrupt - Blue LED");
    prelight = lightState;
  }

  // Tilt Sensor Interrupt Handling
  if (pretilt != tiltState) {
    digitalWrite(ledRed, tiltState);      
    Serial.println("Tilt Sensor Interrupt - Red LED");
    pretilt = tiltState;
  }
  
  delay(200);                           // Delay 
}

// Pin Change Interrupt for Port D
ISR(PCINT2_vect){
  motionState = PIND & B00000100;        // Read Motion Sensor (Pin 2)
  tiltState = PIND & B00001000;          // Read Tilt Sensor (Pin 3)
  lightState = PIND & B00010000;         // Read Ambient Light Sensor (Pin 4)
}

// Timer1 Compare Match Interrupt (1-second interval)
ISR(TIMER1_COMPA_vect){
  TCNT1 = timer;                        // Reset Timer counter
  PORTB ^= (1 << ledGreen);              // Toggle Green LED
}
